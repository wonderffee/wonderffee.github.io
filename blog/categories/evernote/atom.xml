<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Evernote, | Wonderffee's Blog]]></title>
  <link href="http://wonderffee.github.io/blog/categories/evernote/atom.xml" rel="self"/>
  <link href="http://wonderffee.github.io/"/>
  <updated>2015-06-05T10:44:39+08:00</updated>
  <id>http://wonderffee.github.io/</id>
  <author>
    <name><![CDATA[wonderffee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用AppleScript增强Mac下Evernote的编辑能力]]></title>
    <link href="http://wonderffee.github.io/blog/2015/06/04/improve-evernote-editing-capabilities-in-mac/"/>
    <updated>2015-06-04T23:30:00+08:00</updated>
    <id>http://wonderffee.github.io/blog/2015/06/04/improve-evernote-editing-capabilities-in-mac</id>
    <content type="html"><![CDATA[<h2>由来</h2>

<p>上午想在Evernote中对一篇文章的子标题进行加红操作，没有格式刷只能一遍又一遍地选中文字，再打开调色板，选中颜色，关闭调色板，真是无以吐槽。</p>

<p>搜索了一下相关增强Evernote编辑能力的文章，发现了知乎上的一篇<a href="http://www.zhihu.com/question/19926379/answer/28118317">分享</a>，以及v2ex上的这个<a href="http://www.v2ex.com/t/186506">帖子</a>，都是Windows下借助Autohotkey来实现增加Evernote编辑能力的。想起以前在Windows下用Autohotkey那可真是得心应手啊，可惜Mac下没有。</p>

<!--more-->


<p>想起了之前用AppleScript来实现一些快捷操作，在Mac下是否能用AppleScript脚本来简化上面繁琐的加红操作呢？</p>

<p>简单看了一下上面的Autohotkey脚本代码，发现只需要把选中文字转换成html格式然后粘贴就行。然而AppleScript并没有像Autohotkey那样简单的SetHTML命令。</p>

<h2>突破</h2>

<p>几经折腾，终于折腾出了下面的可行代码：</p>

<p>```applescript
set appName to &ldquo;Evernote&rdquo;</p>

<p>&mdash; if application appName is running then
tell application id (id of application appName)</p>

<pre><code>activate
tell application "System Events"
    keystroke "c" using command down
end tell
set selectedText to the clipboard as «class utf8»
-- the clipboard as "HTML"
set the clipboard to "&lt;span style=\"color:red;\"&gt;" &amp; selectedText &amp; "&lt;/span&gt;"
set theHEX to do shell script "LC_ALL=en_US.UTF-8 pbpaste | hexdump -ve '1/1 \"%.2x\"'"
if theHEX is "" then
    beep
else
    run script "set the clipboard to «data HTML" &amp; theHEX &amp; "»"
    tell application "System Events"
        keystroke "v" using {command down}
    end tell
end if
</code></pre>

<p>end tell
&mdash; end if
```</p>

<p>原理就是复制选中的文字，加上html颜色的标签，然后变成html格式内容，粘贴即可。</p>

<p>比如选中的文字为“Hello”，上面的代码会先把它变成<code>&lt;span style="color:red;"&gt;Hello&lt;/span&gt;</code>，然后在Evernote中粘贴就变成了红色字体的<span style="color:red;">&ldquo;Hello&rdquo;</span></p>

<p>其中的难点在于把html源码变成剪贴板认可的html富文本格式内容，这个借助了shell中的hexdump命令以及用剪贴板作为中介。突破了这个难点之后，你就可以任意自定义html格式了。</p>

<h2>Automator自动化</h2>

<p>要与Evernote集成，就要借助于Automator工具了。
Automator 是 Mac 自带的神奇小机器人，这次我们就要用它的 Workflow 功能来将脚本绑定到系统快捷键上。
先来设置 Automator，Automator 可以在 Spotlight 里快速启动。</p>

<pre><code>1、菜单里选”新建“，选取文稿类型“服务”;
2、在出来的窗口右侧顶部设置“服务”收到选定的“文本”，位于”Evernote“，不要勾选”用输出内容替换选中文本“
3、在左侧选取“运行AppleScript”，双击或直接拖到右侧区域内;
4、在出现的 AppleScript 编辑窗口里输入代码，之后保存为你喜欢的名字;
5、此时在系统左上角 Automator 的下拉菜单里“服务”一栏就已经有刚才你保存的服务啦！现在点击刚刚保存的服务的名称运行一次看看~~（一定要运行一次哦）
</code></pre>

<p>在Automator中的脚本可以更简单：</p>

<p>```applescript
on run {input, parameters}</p>

<pre><code>-- the clipboard as "HTML"
set the clipboard to "&lt;span style=\"color:red;\"&gt;" &amp; input &amp; "&lt;/span&gt;"
set theHEX to do shell script "LC_ALL=en_US.UTF-8 pbpaste | hexdump -ve '1/1 \"%.2x\"'"

if theHEX is "" then
    beep
else
    run script "set the clipboard to «data HTML" &amp; theHEX &amp; "»"
    -- set input to the clipboard
    tell application "System Events"
        keystroke "v" using {command down}
    end tell
end if

--display dialog (the clipboard)
-- return input
</code></pre>

<p>end run
```</p>

<p>保存的位置在/Users/yourusername/Library/Services/</p>

<p>现在开始设置快捷键。</p>

<pre><code>1、点击 Automator 下拉菜单中“服务-&gt;服务偏好设置”;
2、在弹出的服务偏好设置窗口右侧，从“通用”中找到刚保存的服务名称，选中该服务，右侧可以看到“添加快捷键”的按钮;
3、点击“添加快捷键”按钮，在键盘上按下需要设置的快捷键。
</code></pre>

<p>我给自己自定义的快捷键是cmd+shift+1。以后要在Evernote中对选中的文字进行红色高亮时，按下cmd+shift+1就可以搞定。</p>

<p>是不是很简单？
这样，你就可以自定义一些自己常用的文本格式，绑定快捷键，然后就像Word中的样式表一样，一键就可以更换自己需要的格式。</p>

<p>这只是一个简单的例子，相信实现其它的文本格式也不是难事，权当抛砖引玉，大家应该能做出更高级的功能。</p>

<h2>延伸——增强MarkDown编辑能力</h2>

<p>写这篇文章时还发现另一个用途：增强MarkDown编辑能力。</p>

<p>众所周知，MarkDown对颜色支持似乎不是很好，如果我要把一段内容变成红色字体，办法只能是写HTML代码，可这依然是一件麻烦的事情。受上面的启发，我们可以写一个AppleScript脚本对选定的文字进行HTML包装，然后自动粘贴。那么只用一个快捷键就可以搞定了。</p>

<p>在Automator中只需要上面一半不到的代码就行了：</p>

<p>```applescript
on run {input, parameters}  &mdash; the clipboard as &ldquo;HTML&rdquo;  set the clipboard to &ldquo;<span style=\"color:red;\">&rdquo; &amp; input &amp; &ldquo;</span>&rdquo;  tell application &ldquo;System Events&rdquo;        keystroke &ldquo;v&rdquo; using {command down}  end tell
end run</p>

<p>```</p>

<p>下面就是效果了：</p>

<p><span style="color:red;">同样地，我们可以为了让自己方便写MarkDown而自定义一系列样式，用AppleScript实现，形成自己的MarkDown样式表，让自己的MarkDown文章更容易地玩出更多的花样。</span></p>

<h2>一些额外的发现：</h2>

<ul>
<li>将文本转换成完整html源码的AppleScript脚本：</li>
<li><p><code>applescript
set customHTML to "123"
set theMsg to do shell script "echo " &amp; quoted form of customHTML &amp; space &amp; "| textutil -stdin -stdout -format html -convert html -encoding UTF-8"
set the clipboard to the theMsg
</code></p></li>
<li><p>在terminal里用于查看刚刚复制的html内容的html源码的命令：</p></li>
<li><p><code>bash
osascript -e 'the clipboard as "HTML"'|perl -ne 'print chr foreach unpack("C*",pack("H*",substr($_,11,-3)))'
</code></p></li>
<li><p>通过 AppleScript 连接印象笔记  <br/>
<a href="https://dev.yinxiang.com/doc/articles/applescript.php">https://dev.yinxiang.com/doc/articles/applescript.php</a></p></li>
<li><p>查看Evernote api for AppleScript的方法：  <br/>
在Evernote的菜单中，选择 &ldquo;文件 > 打开字典&hellip;&rdquo; 然后在显示的应用列表中选择Evernote。</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
